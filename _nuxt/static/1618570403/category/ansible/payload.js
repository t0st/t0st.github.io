__NUXT_JSONP__("/category/ansible", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad){return {data:[{posts:[{slug:"setup_awx_aka_ansibletower",title:"ðŸ—¼ Howto setup AWX (a.k.a Ansible Tower)",desc:"A description how to install and configure AWX - the upstream project of Ansible Tower",date:new Date(1583884800000),categories:[y],toc:[{id:A,depth:2,text:B},{id:C,depth:s,text:D},{id:E,depth:s,text:F},{id:G,depth:s,text:H},{id:I,depth:s,text:J},{id:K,depth:s,text:L}],body:{type:M,children:[{type:b,tag:d,props:{},children:[{type:a,value:"If we want to execute ansible playbooks centrally and at scheduled dates it is recommended to use a software like AWX for this purpose."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The following article describes how to install AWX on CentOS8 as containerized application and the initial configuration of a ldap-connect to a ldap\u002Fad server."}]},{type:a,value:c},{type:b,tag:"h2",props:{id:A},children:[{type:b,tag:e,props:{href:"#install-awx",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:"All steps here get executed via ssh on the selected server which runs CentOS8, user must have root privileges."}]}]},{type:a,value:c},{type:b,tag:t,props:{id:C},children:[{type:b,tag:e,props:{href:"#install-needed-tools",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Install epel repo and then install jq\nyum install -y epel-release -y && yum install jq"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Install docker-ce related packages\nyum install -y yum-utils device-mapper-persistent-data lvm2"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Install docker-ce for this we need to remove podman :(((\ndnf config-manager --add-repo="},{type:b,tag:e,props:{href:v,rel:[f,g,h],target:i},children:[{type:a,value:v}]},{type:a,value:"\nAdding repo from: "},{type:b,tag:e,props:{href:v,rel:[f,g,h],target:i},children:[{type:a,value:v}]},{type:a,value:"\ndnf list docker-ce\ndnf install docker-ce --nobest -y\ndnf remove podman\ndnf install docker-ce --nobest -y\nsystemctl start docker\nsystemctl enable docker\ndocker --version\nDocker version 19.03.8, build afacb8b\ndnf install curl -y\ndnf install make -y"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Install docker-compose\nLATEST_VERSION=$(curl -s "},{type:b,tag:e,props:{href:N,rel:[f,g,h],target:i},children:[{type:a,value:N}]},{type:a,value:" | jq -r '.tag_name')\ncurl -L \""},{type:b,tag:e,props:{href:O,rel:[f,g,h],target:i},children:[{type:a,value:O}]},{type:a,value:" -s)-$(uname -m)\" \u003E \u002Fusr\u002Flocal\u002Fbin\u002Fdocker-compose\nchmod +x \u002Fusr\u002Flocal\u002Fbin\u002Fdocker-compose\ndocker-compose --version\ndocker-compose version 1.25.4, build 8d51620a"}]},{type:a,value:c},{type:b,tag:P,props:{className:[Q]},children:[{type:b,tag:R,props:{className:[S,T]},children:[{type:b,tag:U,props:{},children:[{type:a,value:"dnf install python3\ndnf install ansible\ndnf install python3-pip\npython3 -m pip install docker-compose\ncp \u002Fbin\u002Fuser\n"}]}]}]},{type:a,value:c},{type:b,tag:t,props:{id:E},children:[{type:b,tag:e,props:{href:"#configure-stuff",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:F}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Configure Firewall\nfirewall-cmd --get-zone-of-interface=docker0\nsudo firewall-cmd --zone=work --change-interface=docker0"}]},{type:a,value:c},{type:b,tag:P,props:{className:[Q]},children:[{type:b,tag:R,props:{className:[S,T]},children:[{type:b,tag:U,props:{},children:[{type:a,value:"firewall-cmd --zone=public --add-masquerade --permanent\nfirewall-cmd --reload\nsystemctl status firewalld.service\nsystemctl restart docker\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Change dir to the home directory.\ncd ~"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Get the latest release of ansible awx tarball and extract it.\nLATEST_AWX=$(curl -s "},{type:b,tag:e,props:{href:V,rel:[f,g,h],target:i},children:[{type:a,value:V}]},{type:a,value:" |egrep name |head -1 |awk '{print $2}' |tr -d '\"|,')\ncurl -L -o ansible-awx-$LATEST_AWX.tar.gz "},{type:b,tag:e,props:{href:W,rel:[f,g,h],target:i},children:[{type:a,value:W}]},{type:a,value:" && "},{type:b,tag:k,props:{},children:[]},{type:a,value:"\ntar xvfz ansible-awx-$LATEST_AWX.tar.gz && "},{type:b,tag:k,props:{},children:[]},{type:a,value:"\nrm -f ansible-awx-$LATEST_AWX.tar.gz"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Enter awx folder.\ncd awx-$LATEST_AWX"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Create a folder in \u002Fopt\u002F to hold awx psql data\nmkdir -p \u002Fopt\u002Fawx-psql-data"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Disable dockerhub reference in order to build local images.\nsed -i \"s|^dockerhub_base=ansible|#dockerhub_base=ansible|g\" installer\u002Finventory"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Provide psql data path to installer.\nsed -i \"s|^postgres_data_dir.*|postgres_data_dir=\u002Fopt\u002Fawx-psql-data|g\" installer\u002Finventory"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Create awx-ssl folder in \u002Fetc.\nmkdir -p \u002Fetc\u002Fawx-ssl\u002F"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Make a self-signed ssl certificate\nopenssl req -subj '\u002FCN="},{type:b,tag:z,props:{},children:[{type:a,value:"\u002FO="},{type:b,tag:"o",props:{},children:[{type:a,value:"\u002FL="},{type:b,tag:"l",props:{},children:[{type:a,value:"\u002FST="},{type:b,tag:"st",props:{},children:[{type:a,value:"\u002FC="},{type:b,tag:"c",props:{},children:[{type:a,value:"' "},{type:b,tag:k,props:{},children:[]},{type:a,value:"\n-new -newkey rsa:2048 "},{type:b,tag:k,props:{},children:[]},{type:a,value:"\n-sha256 -days 1365 "},{type:b,tag:k,props:{},children:[]},{type:a,value:"\n-nodes -x509 "},{type:b,tag:k,props:{},children:[]},{type:a,value:"\n-keyout \u002Fetc\u002Fawx-ssl\u002Fawx.key "},{type:b,tag:k,props:{},children:[]},{type:a,value:"\n-out \u002Fetc\u002Fawx-ssl\u002F\u002Fawx.crt"}]}]}]}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Merge awx.key and awx.crt files\ncat \u002Fetc\u002Fawx-ssl\u002Fawx.key \u002Fetc\u002Fawx-ssl\u002Fawx.crt \u003E \u002Fetc\u002Fawx-ssl\u002Fawx-bundled-key.crt"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Pass the full path of awx-bundled-key.crt file to ssl_certificate variable in inventory.\nsed -i -E \"s|^#([[:space:]]?)ssl_certificate=|ssl_certificate=\u002Fetc\u002Fawx-ssl\u002Fawx-bundled-key.crt|g\" installer\u002Finventory"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Change dir to where awx main folder is placed:\ncd ~"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Download and extract awx-logos repository.\n(We could use git to clone the repo; but it requires git to be installed on the host.)\ncurl -L -o awx-logos.tar.gz "},{type:b,tag:e,props:{href:X,rel:[f,g,h],target:i},children:[{type:a,value:X}]},{type:a,value:"\ntar xvfz awx-logos.tar.gz"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:"UPDATE 21.01.2021: The logos have gotten replaces with.. blanks?"}]},{type:a,value:"\nIf you want to get the old version then download "},{type:b,tag:e,props:{href:Y,rel:[f,g,h],target:i},children:[{type:a,value:Y}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Rename awx-logos-master folder as awx-logos\nmv awx-logos-master awx-logos"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Remove archive\nrm -f "},{type:b,tag:u,props:{},children:[{type:a,value:"awx"}]},{type:a,value:".tar.gz"}]},{type:a,value:c},{type:b,tag:t,props:{id:G},children:[{type:b,tag:e,props:{href:"#set-awx-parameters",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:H}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Change dir to awx and replace awx_official parameter\ncd awx-$LATEST_AWX\nsed -i -E \"s|^#([[:space:]]?)awx_official=false|awx_official=true|g\" installer\u002Finventory"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Define the default admin username\nsed -i \"s|^admin_user=.*|admin_user="},{type:b,tag:"admin-user",props:{},children:[{type:a,value:q}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Set a password for the admin\nsed -i \"s|^admin_password=.*|admin_password="},{type:b,tag:"admin-pw",props:{},children:[{type:a,value:q}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Set awx secret_key\nsed -i \"s|^secret_key=.*|secret_key="},{type:b,tag:"key",props:{},children:[{type:a,value:q}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Set password for rabbitmq\nsed -i \"s|^rabbitmq_password=.*|rabbitmq_password="},{type:b,tag:"mq-pw",props:{},children:[{type:a,value:q}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Set postgresql username\nsed -i \"s|^pg_username=.*|pg_username="},{type:b,tag:"pg-user",props:{},children:[{type:a,value:q}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Set postgresql password\nsed -i \"s|^pg_password=.*|pg_password="},{type:b,tag:"pg-pw",props:{},children:[{type:a,value:q}]}]},{type:a,value:c},{type:b,tag:t,props:{id:I},children:[{type:b,tag:e,props:{href:"#start-awx-installation",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"stop firewall for installation (otherwise docker containers cant access internet)\nsystemctl stop firewalld\nsystemctl restart docker"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Enter the installer directory.\ncd ~\u002Fawx-$LATEST_AWX\u002Finstaller"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Initiate install.yml\nansible-playbook -i inventory install.yml"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Great! The playbook will now start to build the docker-containers and launch them."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"After this you can log in with the admin user credentials at "},{type:b,tag:e,props:{href:Z,rel:[f,g,h],target:i},children:[{type:a,value:Z}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:"start firewall again after installation is finished!!"}]},{type:a,value:"\nsystemctl start firewalld"}]},{type:a,value:c},{type:b,tag:t,props:{id:K},children:[{type:b,tag:e,props:{href:"#optional-configure-ldap-connect-to-ad-server",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Login to the UI via https:\u002F\u002F"},{type:b,tag:"servername",props:{},children:[{type:a,value:"\u002F and the credentials of admin user from above"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Go to Seetings â†’ Auth â†’ LDAP"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"LDAP SERVER URI\nldap:\u002F\u002F"},{type:b,tag:_,props:{},children:[{type:a,value:$},{type:b,tag:aa,props:{},children:[{type:a,value:"\nor better\nlaps:\u002F\u002F"},{type:b,tag:_,props:{},children:[{type:a,value:$},{type:b,tag:aa,props:{},children:[]}]}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"LDAP BIND DN\nCN="},{type:b,tag:z,props:{},children:[{type:a,value:w},{type:b,tag:x,props:{},children:[{type:a,value:w},{type:b,tag:x,props:{},children:[{type:a,value:r},{type:b,tag:j,props:{},children:[{type:a,value:r},{type:b,tag:j,props:{},children:[]}]}]}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"LDAP Bind Password\n"},{type:b,tag:"user-password",props:{},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"LDAP REQUIRE GROUP\nCN="},{type:b,tag:z,props:{},children:[{type:a,value:w},{type:b,tag:x,props:{},children:[{type:a,value:w},{type:b,tag:x,props:{},children:[{type:a,value:r},{type:b,tag:j,props:{},children:[{type:a,value:r},{type:b,tag:j,props:{},children:[]}]}]}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"LDAP USER SEARCH\n[\n\"DC="},{type:b,tag:j,props:{},children:[{type:a,value:r},{type:b,tag:j,props:{},children:[{type:a,value:"\",\n\"SCOPE_SUBTREE\",\n\"(sAMAccountName=%(user)s)\"\n]"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"LDAP GROUP SEARCH\n[\n\"DC="},{type:b,tag:j,props:{},children:[{type:a,value:r},{type:b,tag:j,props:{},children:[{type:a,value:"\",\n\"SCOPE_SUBTREE\",\n\"(objectClass=group)\"\n]"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"LDAP USER ATTRIBUTE MAP\n{\n\"first_name\": \"givenName\",\n\"last_name\": \"sn\",\n\"email\": \"mail\"\n}"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Awesome! Now you can grant your Users in your LDAP Group access to AWX!"}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002Fsetup_awx_aka_ansibletower",extension:ab,createdAt:ac,updatedAt:ac}],category:{slug:y,name:y,icon:"ansible.svg",desc:"Ansible",toc:[],body:{type:M,children:[]},dir:"\u002Fcategories",path:"\u002Fcategories\u002Fansible",extension:ab,createdAt:ad,updatedAt:ad}}],fetch:{},mutations:void 0}}("text","element","\n","p","a","nofollow","noopener","noreferrer","_blank","dc","br","true",-1,"span","icon","icon-link","|g\" installer\u002Finventory",",DC=",3,"h3","em","https:\u002F\u002Fdownload.docker.com\u002Flinux\u002Fcentos\u002Fdocker-ce.repo",",OU=","ou","ansible","cn","install-awx","Install AWX","install-needed-tools","Install needed tools","configure-stuff","Configure stuff","set-awx-parameters","Set AWX parameters","start-awx-installation","Start AWX Installation","optional-configure-ldap-connect-to-ad-server","Optional: Configure LDAP connect to AD-Server","root","https:\u002F\u002Fapi.github.com\u002Frepos\u002Fdocker\u002Fcompose\u002Freleases\u002Flatest","https:\u002F\u002Fgithub.com\u002Fdocker\u002Fcompose\u002Freleases\u002Fdownload\u002F$LATEST_VERSION\u002Fdocker-compose-$(uname","div","nuxt-content-highlight","pre","language-text","line-numbers","code","https:\u002F\u002Fapi.github.com\u002Frepos\u002Fansible\u002Fawx\u002Ftags","https:\u002F\u002Fgithub.com\u002Fansible\u002Fawx\u002Farchive\u002F$LATEST_AWX.tar.gz","https:\u002F\u002Fgithub.com\u002Fansible\u002Fawx-logos\u002Farchive\u002Fmaster.tar.gz","https:\u002F\u002Fgithub.com\u002Fansible\u002Fawx-logos\u002Farchive\u002F7064a4635a3f857c67a5f5a8608ca52c27cdf26c.zip","https:\u002F\u002Fservername\u002F#\u002Flogin","server",":","port",".md","2021-04-16T10:52:03.233Z","2021-04-16T10:52:03.229Z")));